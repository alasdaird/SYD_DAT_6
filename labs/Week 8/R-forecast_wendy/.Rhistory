# Install required packages -----------------------------------------------
install.packages("forecast")
install.packages("fpp")
install.packages("ggplot2")
library(ggplot2)
library(forecast)
library(fpp) # get a dataset to work with from 'fpp' - datasets from forecasting principles and practice
# Explore elecequip dataset -----------------------------------------------
plot(elecequip)
head(elecequip)
class(elecequip)  # ts class
elecequip
View(elecequip)
fit <- stl(elecequip, s.window=5)  #seasonal decomposition
plot(fit) # show the components
autoplot(fit)  # plot with ggplot2
# Plot elecequip time series ----------------------------------------------
plot(elecequip, col='gray',
main="Electrical Equipment Manyfacturing",
ylab='New orders index', xlab="")
lines(fit$time.series[,2], col="red", ylab="Trend")
# Apply Exponential Smoothing to Oil Data ---------------------------------
plot(oil)
# Exponential smoothing model - with different Alpha smoothing and H perio parameter settings
fit1 <- ses(oil, alpha=0.2, initial="simple", h=3) # alpha=smppthing parameter  h=periods
fit2 <- ses(oil, alpha=0.6, initial="simple", h=3)
fit3 <- ses(oil,  h=3)
fi
# Apply Exponential Smoothing to Oil Data ---------------------------------
plot(oil)
# Exponential smoothing model - with different Alpha smoothing and H perio parameter settings
fit1 <- ses(oil, alpha=0.2, initial="simple", h=3) # alpha=smppthing parameter  h=periods
fit2 <- ses(oil, alpha=0.6, initial="simple", h=3)
fit3 <- ses(oil,  h=3)
fit4 <- ses(oil, alpha=0.6, initial="simple", h=1)
# Plot the model fit (training data)
plot(fit1, plot.conf=FALSE, ylab="Oil (millions of tonnes)",
xlab="Year", main="", fcol="white", type="o")
lines(fitted(fit1), col="blue", type="o")
lines(fitted(fit2), col="red", type="o")
lines(fitted(fit3), col="green", type="o")
lines(fitted(fit4), col="yellow", type="o")
# PLot the forecast
plot(fit1, plot.conf=FALSE, ylab="Oil (millions of tonnes)",
xlab="Year", main="", fcol="white", type="o")
lines(fit1$mean, col="blue", type="o")
lines(fit2$mean, col="red", type="o")
lines(fit3$mean, col="green", type="o")
aust <- window(austourists, start=2005)
plot(aust)
fit1 <- hw(aust, seasonal="additive")
fit2 <- hw(aust, seasonal="multiplicative")
plot(fit2, ylab="International visitnor night in Australia (millions)",
plot.conf=FALSE, type="o", fcol="white", xlab="Year")
lines(fitted(fit1), col="red", lty=2)
lines(fitted(fit2), col="green", lty=2)
#add the forecasts
lines(fit1$mean, type="o", col="red")
lines(fit2$mean, type="o", col="green")
# Monthly anti-diabetic drug sales in Australia from 1992 to 2008 ---------
?a10
# Seasonal Differencing
plot(a10)
plot(log(a10))  # variance (as well as the scale) reduces for the log values
# for exponential models, differencing ones gives you a striaght line, differencing twice, straight
plot(stl(a10, s.window=12))
plot(diff(log(a10), s.window=12))
# ARIMA model on diabetes dataset -----------------------------------------
# ARIMA Model
tsdisplay(diff(WWWusage), main="")
fit <- Arima(WWWusage, order=c(3,1,1))
summary(fit)
plot(forecast(fit))
plot(forecast(fit))
fit1 <- auto.arima(WWWusage)
plot(forecast(fit1))
summary(fit1)
# for a10 dataset
fit2 <- auto.arima(a10)
plot(forecast(fit2))
summary(fit2)
