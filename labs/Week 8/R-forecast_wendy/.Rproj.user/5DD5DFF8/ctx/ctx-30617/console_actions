{
    "data" : [
        "+ ",
        "     ylab='New orders index', xlab=\"\")",
        "> ",
        "lines(fit$time.series[,2], col=\"red\", ylab=\"Trend\")",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "fit time series",
        "Error: unexpected symbol in \"fit time\"\n",
        "> ",
        "source('~/Desktop/SYD_DAT_6/labs/Week 8/Time_Series_Lab.R')",
        "Error in install.packages : Updating loaded packages\nError in install.packages : Updating loaded packages\nError in install.packages : Updating loaded packages\nSeries: WWWusage \nARIMA(3,1,1)                    \n\nCoefficients:\n         ar1      ar2     ar3     ma1\n      1.0922  -0.5992  0.3231  0.0671\ns.e.  0.2694   0.2999  0.1242  0.2835\n\nsigma^2 estimated as 9.752:  log likelihood=-251.97\nAIC=513.94   AICc=514.58   BIC=526.91\n\nTraining set error measures:\n                    ME     RMSE     MAE      MPE     MAPE",
        "      MASE        ACF1\nTraining set 0.2331752 3.043705 2.36861 0.273302 1.892141 0.5234205 -0.01135814\nSeries: WWWusage \nARIMA(1,1,1)                    \n\nCoefficients:\n         ar1     ma1\n      0.6504  0.5256\ns.e.  0.0842  0.0896\n\nsigma^2 estimated as 9.995:  log likelihood=-254.15\nAIC=514.3   AICc=514.55   BIC=522.08\n\nTraining set error measures:\n                    ME     RMSE      MAE       MPE     MAPE      MASE        ACF1\nTraining set 0.3035616 3.113754 2.405275 0.2805566 1.917463 0.5315228 -0.01715517",
        "\nSeries: a10 \nARIMA(1,1,1)(0,1,1)[12]                    \n\nCoefficients:\n          ar1      ma1     sma1\n      -0.2504  -0.6674  -0.4725\ns.e.   0.1007   0.0870   0.0641\n\nsigma^2 estimated as 0.8756:  log likelihood=-258.82\nAIC=525.63   AICc=525.85   BIC=538.64\n\nTraining set error measures:\n                     ME      RMSE       MAE        MPE     MAPE      MASE         ACF1\nTraining set 0.05924459 0.8982771 0.5761196 0.02969764 4.901351 0.4447873 -0.004871281\n\nRestarting R session...\n\n",
        "> ",
        "install.packages(\"forecast\")",
        "  % Total    % Recei",
        "ved % Xferd  Average Speed ",
        " ",
        " Ti",
        "me ",
        " ",
        "  T",
        "ime",
        "    ",
        " Tim",
        "e  Current",
        "\n   ",
        "    ",
        " ",
        "   ",
        "   ",
        "   ",
        "        ",
        "        ",
        "Dload",
        "  U",
        "plo",
        "ad",
        "   ",
        "Tot",
        "al ",
        "  Spe",
        "n",
        "t  ",
        "  ",
        "L",
        "eft",
        "  S",
        "peed\n",
        "\r ",
        " 0     0",
        "    0     0    0     0      0      0 --:--:",
        "-- --:--:-- --:--:",
        "--   ",
        "  0",
        "\r100 1517k  ",
        "100 1517k    0     0  4362k      0",
        " --:--:-- --",
        ":",
        "--:-- -",
        "-:--:-- 4372k\n",
        "\nThe downloaded binary packages are in\n\t/var/folders/pd/g4kts07s0_75q93xwbrr709r0000gn/T//RtmpzmfwGc/downloaded_packages\n",
        "> ",
        "# Plot elecequip time series ----------------------------------------------",
        "> ",
        "plot(elecequip, col='gray',",
        "+ ",
        "     main=\"Electrical Equipment Manyfacturing\",",
        "+ ",
        "     ylab='New orders index', xlab=\"\")",
        "Error in plot(elecequip, col = \"gray\", main = \"Electrical Equipment Manyfacturing\",  : \n  object 'elecequip' not found\n",
        "> ",
        "lines(fit$time.series[,2], col=\"red\", ylab=\"Trend\")",
        "> ",
        "# Apply Exponential Smoothing to Oil Data ---------------------------------",
        "> ",
        "plot(oil)",
        "Error in plot(oil) : object 'oil' not found\n",
        "> ",
        "# Exponential smoothing model - with different Alpha smoothing and H perio parameter settings",
        "> ",
        "fit1 <- ses(oil, alpha=0.2, initial=\"simple\", h=3) # alpha=smppthing parameter  h=periods",
        "Error: could not find function \"ses\"\n",
        "> ",
        "fit2 <- ses(oil, alpha=0.6, initial=\"simple\", h=3)",
        "Error: could not find function \"ses\"\n",
        "> ",
        "fit3 <- ses(oil,  h=3)",
        "Error: could not find function \"ses\"\n",
        "> ",
        "fit4 <- ses(oil, alpha=0.6, initial=\"simple\", h=1)",
        "Error: could not find function \"ses\"\n",
        "> ",
        "# Plot the model fit (training data)",
        "> ",
        "plot(fit1, plot.conf=FALSE, ylab=\"Oil (millions of tonnes)\",",
        "+ ",
        "     xlab=\"Year\", main=\"\", fcol=\"white\", type=\"o\")",
        "Error in xy.coords(x, y, xlabel, ylabel, log) : \n  'x' is a list, but does not have components 'x' and 'y'\n",
        "> ",
        "lines(fitted(fit1), col=\"blue\", type=\"o\")",
        "> ",
        "lines(fitted(fit2), col=\"red\", type=\"o\")",
        "> ",
        "lines(fitted(fit3), col=\"green\", type=\"o\")",
        "> ",
        "lines(fitted(fit4), col=\"yellow\", type=\"o\")",
        "> ",
        "# PLot the forecast",
        "> ",
        "plot(fit1, plot.conf=FALSE, ylab=\"Oil (millions of tonnes)\",",
        "+ ",
        "     xlab=\"Year\", main=\"\", fcol=\"white\", type=\"o\")",
        "Error in xy.coords(x, y, xlabel, ylabel, log) : \n  'x' is a list, but does not have components 'x' and 'y'\n",
        "> ",
        "lines(fit1$mean, col=\"blue\", type=\"o\")",
        "> ",
        "lines(fit2$mean, col=\"red\", type=\"o\")",
        "> ",
        "lines(fit3$mean, col=\"green\", type=\"o\")",
        "> ",
        "# Plot elecequip time series ----------------------------------------------",
        "> ",
        "plot(elecequip, col='gray',",
        "+ ",
        "     main=\"Electrical Equipment Manyfacturing\",",
        "+ ",
        "     ylab='New orders index', xlab=\"\")",
        "Error in plot(elecequip, col = \"gray\", main = \"Electrical Equipment Manyfacturing\",  : \n  object 'elecequip' not found\n",
        "> ",
        "lines(fit$time.series[,2], col=\"red\", ylab=\"Trend\")",
        "> ",
        "# Apply Exponential Smoothing to Oil Data ---------------------------------",
        "> ",
        "plot(oil)",
        "Error in plot(oil) : object 'oil' not found\n",
        "> ",
        "# Exponential smoothing model - with different Alpha smoothing and H perio parameter settings",
        "> ",
        "fit1 <- ses(oil, alpha=0.2, initial=\"simple\", h=3) # alpha=smppthing parameter  h=periods",
        "Error: could not find function \"ses\"\n",
        "> ",
        "fit2 <- ses(oil, alpha=0.6, initial=\"simple\", h=3)",
        "Error: could not find function \"ses\"\n",
        "> ",
        "fit3 <- ses(oil,  h=3)",
        "Error: could not find function \"ses\"\n",
        "> ",
        "fit4 <- ses(oil, alpha=0.6, initial=\"simple\", h=1)",
        "Error: could not find function \"ses\"\n",
        "> ",
        "# Plot the model fit (training data)",
        "> ",
        "plot(fit1, plot.conf=FALSE, ylab=\"Oil (millions of tonnes)\",",
        "+ ",
        "     xlab=\"Year\", main=\"\", fcol=\"white\", type=\"o\")",
        "Error in xy.coords(x, y, xlabel, ylabel, log) : \n  'x' is a list, but does not have components 'x' and 'y'\n",
        "> ",
        "lines(fitted(fit1), col=\"blue\", type=\"o\")",
        "> ",
        "lines(fitted(fit2), col=\"red\", type=\"o\")",
        "> ",
        "lines(fitted(fit3), col=\"green\", type=\"o\")",
        "> ",
        "lines(fitted(fit4), col=\"yellow\", type=\"o\")",
        "> ",
        "# PLot the forecast",
        "> ",
        "plot(fit1, plot.conf=FALSE, ylab=\"Oil (millions of tonnes)\",",
        "+ ",
        "     xlab=\"Year\", main=\"\", fcol=\"white\", type=\"o\")",
        "Error in xy.coords(x, y, xlabel, ylabel, log) : \n  'x' is a list, but does not have components 'x' and 'y'\n",
        "> ",
        "lines(fit1$mean, col=\"blue\", type=\"o\")",
        "> ",
        "lines(fit2$mean, col=\"red\", type=\"o\")",
        "> ",
        "lines(fit3$mean, col=\"green\", type=\"o\")",
        "> ",
        "# Plot elecequip time series ----------------------------------------------",
        "> ",
        "plot(elecequip, col='gray',",
        "+ ",
        "     main=\"Electrical Equipment Manyfacturing\",",
        "+ ",
        "     ylab='New orders index', xlab=\"\")",
        "Error in plot(elecequip, col = \"gray\", main = \"Electrical Equipment Manyfacturing\",  : \n  object 'elecequip' not found\n",
        "> ",
        "lines(fit$time.series[,2], col=\"red\", ylab=\"Trend\")",
        "> ",
        "# Plot elecequip time series ----------------------------------------------",
        "> ",
        "plot(elecequip, col='gray',",
        "+ ",
        "     main=\"Electrical Equipment Manyfacturing\",",
        "+ ",
        "     ylab='New orders index', xlab=\"\")",
        "Error in plot(elecequip, col = \"gray\", main = \"Electrical Equipment Manyfacturing\",  : \n  object 'elecequip' not found\n",
        "> ",
        "lines(fit$time.series[,2], col=\"red\", ylab=\"Trend\")",
        "> ",
        "# Apply Exponential Smoothing to Oil Data ---------------------------------",
        "> ",
        "plot(oil)",
        "Error in plot(oil) : object 'oil' not found\n",
        "> ",
        "# Exponential smoothing model - with different Alpha smoothing and H perio parameter settings",
        "> ",
        "fit1 <- ses(oil, alpha=0.2, initial=\"simple\", h=3) # alpha=smppthing parameter  h=periods",
        "Error: could not find function \"ses\"\n",
        "> ",
        "fit2 <- ses(oil, alpha=0.6, initial=\"simple\", h=3)",
        "Error: could not find function \"ses\"\n",
        "> ",
        "fit3 <- ses(oil,  h=3)",
        "Error: could not find function \"ses\"\n",
        "> ",
        "fit4 <- ses(oil, alpha=0.6, initial=\"simple\", h=1)",
        "Error: could not find function \"ses\"\n",
        "> ",
        "# Plot the model fit (training data)",
        "> ",
        "plot(fit1, plot.conf=FALSE, ylab=\"Oil (millions of tonnes)\",",
        "+ ",
        "     xlab=\"Year\", main=\"\", fcol=\"white\", type=\"o\")",
        "Error in xy.coords(x, y, xlabel, ylabel, log) : \n  'x' is a list, but does not have components 'x' and 'y'\n",
        "> ",
        "lines(fitted(fit1), col=\"blue\", type=\"o\")",
        "> ",
        "lines(fitted(fit2), col=\"red\", type=\"o\")",
        "> ",
        "lines(fitted(fit3), col=\"green\", type=\"o\")",
        "> ",
        "lines(fitted(fit4), col=\"yellow\", type=\"o\")",
        "> ",
        "",
        "> ",
        "# PLot the forecast",
        "> ",
        "plot(fit1, plot.conf=FALSE, ylab=\"Oil (millions of tonnes)\",",
        "+ ",
        "     xlab=\"Year\", main=\"\", fcol=\"white\", type=\"o\")",
        "Error in xy.coords(x, y, xlabel, ylabel, log) : \n  'x' is a list, but does not have components 'x' and 'y'\n",
        "> ",
        "lines(fit1$mean, col=\"blue\", type=\"o\")",
        "> ",
        "lines(fit2$mean, col=\"red\", type=\"o\")",
        "> ",
        "lines(fit3$mean, col=\"green\", type=\"o\")",
        "> ",
        "# Install required packages -----------------------------------------------",
        "> ",
        "install.packages(\"forecast\")",
        "  % Total    % Received % Xferd ",
        " Average Speed   Time    Time ",
        " ",
        "   ",
        "Ti",
        "me  Curr",
        "e",
        "nt\n",
        "   ",
        "   ",
        "   ",
        "   ",
        "            ",
        "     ",
        "    ",
        "Dlo",
        "ad ",
        " Up",
        "l",
        "oad ",
        "  ",
        "Tot",
        "al ",
        "  Spent  ",
        "  Left  Speed\n",
        "\r  0     ",
        "0",
        "  ",
        "  0 ",
        "   ",
        " 0 ",
        "  ",
        " 0 ",
        "  ",
        "  ",
        "0 ",
        "  ",
        "  ",
        " 0 ",
        "  ",
        "  ",
        " 0 ",
        "--",
        ":-",
        "-:-",
        "- ",
        "--:",
        "--:",
        "-- ",
        "--:",
        "--:",
        "-- ",
        "   ",
        " 0",
        "\r  0     0    0     0    0 ",
        "    0      0  ",
        "    0 --:--:--  0:00",
        ":",
        "01 ",
        "--:--:--     0",
        "\r100 1517k  100 151",
        "7k    0     0  116",
        "9k      0  ",
        "0:00:",
        "01 ",
        " 0:00:01 --:--:-",
        "- 1170k\n",
        "\nThe downloaded binary packages are in\n\t/var/folders/pd/g4kts07s0_75q93xwbrr709r0000gn/T//RtmpzmfwGc/downloaded_packages\n",
        "> ",
        "install.packages(\"fpp\")",
        "  % Total    % Received %",
        " Xferd  Average Spee",
        "d  ",
        " Ti",
        "me ",
        "  ",
        " Ti",
        "me",
        "     Time  Current\n                                 Dload  U",
        "pload   Total   Spent ",
        "   Le",
        "ft ",
        " Spee",
        "d\n",
        "\r ",
        " 0 ",
        "   ",
        " 0 ",
        "   ",
        "0  ",
        "   ",
        "0  ",
        "  0",
        "   ",
        "  0",
        "   ",
        "   ",
        "0  ",
        "   ",
        " 0 ",
        "--:",
        "--:-- --:--:-- --:--:--     0",
        "\r100 81691  100 81691    0     0   662k      0 --:--:-- --:--:-- --:--:--  ",
        "664k\n",
        "\nThe downloaded binary packages are in\n\t/var/folders/pd/g4kts07s0_75q93xwbrr709r0000gn/T//RtmpzmfwGc/downloaded_packages\n",
        "> ",
        "install.packages(\"ggplot2\")",
        "  % Total    % Re",
        "ceived % Xferd  Average",
        " Sp",
        "e",
        "ed   Tim",
        "e    ",
        "Time",
        "   ",
        "  ",
        "Time",
        "  ",
        "Current\n   ",
        "         ",
        "     ",
        "   ",
        "         ",
        "    Dlo",
        "ad ",
        " Uplo",
        "ad",
        "   ",
        "Tota",
        "l   S",
        "pe",
        "n",
        "t  ",
        "  ",
        "Lef",
        "t",
        "  S",
        "pee",
        "d\n",
        "\r  0     0    0     0    0     0      0      0 ",
        "--:--:-- --:--:-",
        "- --:--:-- ",
        "    0",
        "\r  0     0    0    ",
        " 0    0     0      0    ",
        "  0 --:--",
        ":-- ",
        " 0:00:01 --:--:-",
        "-  ",
        "   0",
        "\r100 2694k  100 2694k",
        "    0     0  1950k      0  0:00:",
        "01 ",
        " 0",
        ":",
        "00:",
        "01 --:--:-",
        "- 1951k\n",
        "\nThe downloaded binary packages are in\n\t/var/folders/pd/g4kts07s0_75q93xwbrr709r0000gn/T//RtmpzmfwGc/downloaded_packages\n",
        "> ",
        "# load those packages to the current session ------------------------------",
        "> ",
        "library(ggplot2)",
        "Warning message:\n",
        "package ‘ggplot2’ was built under R version 3.2.5 \n",
        "> ",
        "library(forecast)",
        "Loading required package: zoo\n",
        "\nAttaching package: ‘zoo’\n\n",
        "The following objects are masked from ‘package:base’:\n\n    as.Date, as.Date.numeric\n\n",
        "Loading required package: timeDate\n",
        "This is forecast 7.3 \n\n",
        "Warning messages:\n",
        "1: package ‘forecast’ was built under R version 3.2.5 \n",
        "2: package ‘zoo’ was built under R version 3.2.5 \n",
        "> ",
        "library(fpp) # get a dataset to work with from 'fpp' - datasets from forecasting principles and practice",
        "Loading required package: fma\n",
        "Loading required package: tseries\n",
        "\n    ‘tseries’ version: 0.10-35\n\n    ‘tseries’ is a package for time series analysis and computational finance.\n\n    See ‘library(help=\"tseries\")’ for details.\n\n",
        "Loading required package: expsmooth\n",
        "Loading required package: lmtest\n",
        "Warning messages:\n",
        "1: package ‘fma’ was built under R version 3.2.5 \n",
        "2: package ‘tseries’ was built under R version 3.2.5 \n",
        "> ",
        "# Explore elecequip dataset -----------------------------------------------",
        "> ",
        "plot(elecequip)",
        "> ",
        "head(elecequip)",
        "[1] 79.43 75.86 86.40 72.67 74.93 83.88\n",
        "> ",
        "class(elecequip)  # ts class",
        "[1] \"ts\"\n",
        "> ",
        "elecequip",
        "        Jan    Feb    Mar    Apr    May    Jun    Jul    Aug    Sep    Oct    Nov    Dec\n1996  79.43  75.86  86.40  72.67  74.93  83.88  79.88  62.47  85.50  83.19  84.29  89.79\n1997  78.72  77.49  89.94  81.35  78.76  89.59  83.75  69.87  91.18  89.52  91.12  92.97\n1998  81.97  85.26  93.09  81.19  85.74  91.24  83.56  66.45  93.45  86.03  86.91  93.42\n1999  81.68  81.68  91.35  79.55  87.08  96.71  98.10  79.22 103.68 101.00  99.52 111.94\n2000  95.42  98.49 116.37 101.09 104.20 114.79 107.75  96.23 123.65",
        " 116.24 117.00 128.75\n2001 100.69 102.99 119.21  92.56  98.86 111.26  96.25  79.81 102.18  96.28 101.38 109.97\n2002  89.66  89.23 104.36  87.17  89.43 102.25  88.26  75.73  99.60  96.57  96.22 101.12\n2003  89.45  86.87  98.94  85.62  85.31 101.22  91.93  77.01 104.50  99.83 101.10 109.16\n2004  89.93  92.73 105.22  91.56  92.60 104.46  96.28  79.61 105.55  99.15  99.81 113.72\n2005  91.73  90.45 105.56  92.15  91.23 108.95  99.33  83.30 110.85 104.99 107.10 114.38\n2006  99.09  99.73 116.05 103.51 102.99 119.45",
        " 107.98  90.50 121.85 117.12 113.66 120.35\n2007 103.92 103.97 125.63 104.69 108.36 123.09 108.88  93.98 121.94 116.79 115.78 127.28\n2008 109.35 105.64 121.30 108.62 103.13 117.84 103.62  89.22 109.41 103.93 100.07 101.15\n2009  77.33  75.01  86.31  74.09  74.09  85.58  79.84  65.24  87.92  84.45  87.93 102.42\n2010  79.16  78.40  94.32  84.45  84.92 103.18  89.42  77.66  95.68  94.03 100.99 101.26\n2011  91.47  87.66 103.33  88.56  92.32 102.21  92.80  76.44  94.00  91.67  91.98       \n",
        "> ",
        "View(elecequip)",
        "> ",
        "# Decompose time series with STL ------------------------------------------",
        "> ",
        "# Time-Series Components",
        "> ",
        "fit <- stl(elecequip, s.window=5)  #seasonal decomposition ",
        "> ",
        "plot(fit) # show the components",
        "> ",
        "autoplot(fit)  # plot with ggplot2",
        "> ",
        "# Plot elecequip time series ----------------------------------------------",
        "> ",
        "plot(elecequip, col='gray',",
        "+ ",
        "     main=\"Electrical Equipment Manyfacturing\",",
        "+ ",
        "     ylab='New orders index', xlab=\"\")",
        "> ",
        "lines(fit$time.series[,2], col=\"red\", ylab=\"Trend\")",
        "> ",
        "# Apply Exponential Smoothing to Oil Data ---------------------------------",
        "> ",
        "plot(oil)",
        "> ",
        "# Exponential smoothing model - with different Alpha smoothing and H perio parameter settings",
        "> ",
        "fit1 <- ses(oil, alpha=0.2, initial=\"simple\", h=3) # alpha=smppthing parameter  h=periods",
        "> ",
        "fit2 <- ses(oil, alpha=0.6, initial=\"simple\", h=3)",
        "> ",
        "fit3 <- ses(oil,  h=3)",
        "> ",
        "fit4 <- ses(oil, alpha=0.6, initial=\"simple\", h=1)",
        "> ",
        "# Plot the model fit (training data)",
        "> ",
        "plot(fit1, plot.conf=FALSE, ylab=\"Oil (millions of tonnes)\",",
        "+ ",
        "     xlab=\"Year\", main=\"\", fcol=\"white\", type=\"o\")",
        "> ",
        "lines(fitted(fit1), col=\"blue\", type=\"o\")",
        "> ",
        "lines(fitted(fit2), col=\"red\", type=\"o\")",
        "> ",
        "lines(fitted(fit3), col=\"green\", type=\"o\")",
        "> ",
        "lines(fitted(fit4), col=\"yellow\", type=\"o\")",
        "> ",
        "# PLot the forecast",
        "> ",
        "plot(fit1, plot.conf=FALSE, ylab=\"Oil (millions of tonnes)\",",
        "+ ",
        "     xlab=\"Year\", main=\"\", fcol=\"white\", type=\"o\")",
        "> ",
        "lines(fit1$mean, col=\"blue\", type=\"o\")",
        "> ",
        "lines(fit2$mean, col=\"red\", type=\"o\")",
        "> ",
        "lines(fit3$mean, col=\"green\", type=\"o\")",
        "> ",
        "# Holt Winters",
        "> ",
        "aust <- window(austourists, start=2005)",
        "> ",
        "plot(aust)",
        "> ",
        "fit1 <- hw(aust, seasonal=\"additive\")",
        "> ",
        "fit2 <- hw(aust, seasonal=\"multiplicative\")",
        "> ",
        "plot(fit2, ylab=\"International visitnor night in Australia (millions)\",",
        "+ ",
        "     plot.conf=FALSE, type=\"o\", fcol=\"white\", xlab=\"Year\")",
        "> ",
        "lines(fitted(fit1), col=\"red\", lty=2)",
        "> ",
        "lines(fitted(fit2), col=\"green\", lty=2)",
        "> ",
        "#add the forecasts",
        "> ",
        "#add the forecasts",
        "> ",
        "lines(fit1$mean, type=\"o\", col=\"red\")",
        "> ",
        "lines(fit2$mean, type=\"o\", col=\"green\")",
        "> ",
        "plot(fit2, ylab=\"International visitnor night in Australia (millions)\",",
        "+ ",
        "     plot.conf=FALSE, type=\"o\", fcol=\"white\", xlab=\"Year\")",
        "> ",
        "lines(fitted(fit1), col=\"red\", lty=2)",
        "> ",
        "lines(fitted(fit2), col=\"green\", lty=2)",
        "> ",
        "#add the forecasts",
        "> ",
        "lines(fit1$mean, type=\"o\", col=\"red\")",
        "> ",
        "lines(fit2$mean, type=\"o\", col=\"green\")",
        "> ",
        "# Monthly anti-diabetic drug sales in Australia from 1992 to 2008 ---------",
        "> ",
        "?a10",
        "> ",
        "",
        "> ",
        "# Seasonal Differencing",
        "> ",
        "plot(a10)",
        "> ",
        "plot(log(a10))  # variance (as well as the scale) reduces for the log values",
        "> ",
        "",
        "> ",
        "# for exponential models, differencing ones gives you a striaght line, differencing twice, straight",
        "> ",
        "plot(stl(a10, s.window=12))",
        "> ",
        "plot(diff(log(a10), s.window=12))",
        "> ",
        "# Monthly anti-diabetic drug sales in Australia from 1992 to 2008 ---------",
        "> ",
        "?a10",
        "> ",
        "# Seasonal Differencing",
        "> ",
        "plot(a10)",
        "> ",
        "plot(log(a10))  # variance (as well as the scale) reduces for the log values",
        "> ",
        "# for exponential models, differencing ones gives you a striaght line, differencing twice, straight",
        "> ",
        "plot(stl(a10, s.window=12))",
        "> ",
        "plot(diff(log(a10), s.window=12))",
        "> ",
        "# for exponential models, differencing ones gives you a striaght line, differencing twice, straight",
        "> ",
        "plot(stl(a10, s.window=12))",
        "> ",
        "plot(diff(log(a10), s.window=12))",
        "> ",
        "# Seasonal Differencing",
        "> ",
        "plot(a10)",
        "> ",
        "plot(log(a10))  # variance (as well as the scale) reduces for the log values",
        "> ",
        "# ARIMA model on diabetes dataset -----------------------------------------",
        "> ",
        "# ARIMA Model",
        "> ",
        "tsdisplay(diff(WWWusage), main=\"\")",
        "> ",
        "fit <- Arima(WWWusage, order=c(3,1,1))",
        "> ",
        "summary(fit)",
        "Series: WWWusage \nARIMA(3,1,1)                    \n\nCoefficients:\n         ar1      ar2     ar3     ma1\n      1.0922  -0.5992  0.3231  0.0671\ns.e.  0.2694   0.2999  0.1242  0.2835\n\nsigma^2 estimated as 9.752:  log likelihood=-251.97\nAIC=513.94   AICc=514.58   BIC=526.91\n\nTraining set error measures:\n                    ME     RMSE     MAE      MPE     MAPE      MASE        ACF1\nTraining set 0.2331752 3.043705 2.36861 0.273302 1.892141 0.5234205 -0.01135814\n",
        "> ",
        "plot(forecast(fit))",
        "> ",
        "# now using auto method for selecting order",
        "> ",
        "fit1 <- auto.arima(WWWusage)",
        "> ",
        "plot(forecast(fit1))",
        "> ",
        "summary(fit1)",
        "Series: WWWusage \nARIMA(1,1,1)                    \n\nCoefficients:\n         ar1     ma1\n      0.6504  0.5256\ns.e.  0.0842  0.0896\n\nsigma^2 estimated as 9.995:  log likelihood=-254.15\nAIC=514.3   AICc=514.55   BIC=522.08\n\nTraining set error measures:\n                    ME     RMSE      MAE       MPE     MAPE      MASE        ACF1\nTraining set 0.3035616 3.113754 2.405275 0.2805566 1.917463 0.5315228 -0.01715517\n",
        "> ",
        "# for a10 dataset",
        "> ",
        "fit2 <- auto.arima(a10)",
        "> ",
        "plot(forecast(fit2))",
        "> ",
        "summary(fit2)",
        "Series: a10 \nARIMA(1,1,1)(0,1,1)[12]                    \n\nCoefficients:\n          ar1      ma1     sma1\n      -0.2504  -0.6674  -0.4725\ns.e.   0.1007   0.0870   0.0641\n\nsigma^2 estimated as 0.8756:  log likelihood=-258.82\nAIC=525.63   AICc=525.85   BIC=538.64\n\nTraining set error measures:\n                     ME      RMSE       MAE        MPE     MAPE      MASE         ACF1\nTraining set 0.05924459 0.8982771 0.5761196 0.02969764 4.901351 0.4447873 -0.004871281\n",
        "> ",
        "# Evaluate forecast models using Australian beer dataset ------------------",
        "> ",
        "# Evaluating the models",
        "> ",
        "beer2 <- window(ausbeer, start=1992, end=2006-.1)",
        "> ",
        "",
        "> ",
        "beerfit1 <- meanf(beer2, h=11)",
        "> ",
        "beerfit2 <- rwf(beer2, h=11)",
        "> ",
        "beerfit3 <- snaive(beer2, h=11)",
        "> ",
        "beerfit4 <- auto.arima(beer2)",
        "> ",
        "plot(beerfit1, plot.conf=FALSE,",
        "+ ",
        "     main=\"forecasts for quaterly beer production\")",
        "> ",
        "lines(beerfit2$mean, col=\"red\")",
        "> ",
        "lines(beerfit3$mean, col=\"green\")",
        "> ",
        "plot(forecast(beerfit4), col=\"grey\")",
        "> ",
        "lines(ausbeer)",
        "> ",
        "# Evaluate forecast models using Australian beer dataset ------------------",
        "> ",
        "# Evaluating the models",
        "> ",
        "beer2 <- window(ausbeer, start=1992, end=2006-.1)",
        "> ",
        "",
        "> ",
        "beerfit1 <- meanf(beer2, h=11)",
        "> ",
        "beerfit2 <- rwf(beer2, h=11)",
        "> ",
        "beerfit3 <- snaive(beer2, h=11)",
        "> ",
        "beerfit4 <- auto.arima(beer2)",
        "> ",
        "",
        "> ",
        "plot(beerfit1, plot.conf=FALSE,",
        "+ ",
        "     main=\"forecasts for quaterly beer production\")",
        "> ",
        "lines(beerfit2$mean, col=\"red\")",
        "> ",
        "lines(beerfit3$mean, col=\"green\")",
        "> ",
        "plot(forecast(beerfit4), col=\"grey\")",
        "> ",
        "lines(ausbeer)",
        "> ",
        "# ARIMA model on diabetes dataset -----------------------------------------",
        "> ",
        "# ARIMA Model",
        "> ",
        "tsdisplay(diff(WWWusage), main=\"\")",
        "> ",
        "fit <- Arima(WWWusage, order=c(3,1,1))",
        "> ",
        "summary(fit)",
        "Series: WWWusage \nARIMA(3,1,1)                    \n\nCoefficients:\n         ar1      ar2     ar3     ma1\n      1.0922  -0.5992  0.3231  0.0671\ns.e.  0.2694   0.2999  0.1242  0.2835\n\nsigma^2 estimated as 9.752:  log likelihood=-251.97\nAIC=513.94   AICc=514.58   BIC=526.91\n\nTraining set error measures:\n                    ME     RMSE     MAE      MPE     MAPE      MASE        ACF1\nTraining set 0.2331752 3.043705 2.36861 0.273302 1.892141 0.5234205 -0.01135814\n",
        "> ",
        "plot(forecast(fit))",
        "> ",
        "# now using auto method for selecting order",
        "> ",
        "fit1 <- auto.arima(WWWusage)",
        "> ",
        "plot(forecast(fit1))",
        "> ",
        "summary(fit1)",
        "Series: WWWusage \nARIMA(1,1,1)                    \n\nCoefficients:\n         ar1     ma1\n      0.6504  0.5256\ns.e.  0.0842  0.0896\n\nsigma^2 estimated as 9.995:  log likelihood=-254.15\nAIC=514.3   AICc=514.55   BIC=522.08\n\nTraining set error measures:\n                    ME     RMSE      MAE       MPE     MAPE      MASE        ACF1\nTraining set 0.3035616 3.113754 2.405275 0.2805566 1.917463 0.5315228 -0.01715517\n",
        "> ",
        "# for a10 dataset",
        "> ",
        "fit2 <- auto.arima(a10)",
        "> ",
        "plot(forecast(fit2))",
        "> ",
        "# Evaluate forecast models using Australian beer dataset ------------------",
        "> ",
        "# Evaluating the models",
        "> ",
        "beer2 <- window(ausbeer, start=1992, end=2006-.1)",
        "> ",
        "",
        "> ",
        "beerfit1 <- meanf(beer2, h=11)",
        "> ",
        "beerfit2 <- rwf(beer2, h=11)",
        "> ",
        "beerfit3 <- snaive(beer2, h=11)",
        "> ",
        "beerfit4 <- auto.arima(beer2)",
        "> ",
        "",
        "> ",
        "plot(beerfit1, plot.conf=FALSE,",
        "+ ",
        "     main=\"forecasts for quaterly beer production\")",
        "> ",
        "lines(beerfit2$mean, col=\"red\")",
        "> ",
        "lines(beerfit3$mean, col=\"green\")",
        "> ",
        "plot(forecast(beerfit4), col=\"grey\")",
        "> ",
        "lines(a",
        "+ ",
        "source('~/Desktop/SYD_DAT_6/labs/Week 8/Time_Series_Lab.R')",
        "Error: unexpected symbol in:\n\"lines(a\nsource\"\n",
        "> ",
        "# Evaluate forecast models using Australian beer dataset ------------------",
        "> ",
        "# Evaluating the models",
        "> ",
        "beer2 <- window(ausbeer, start=1992, end=2006-.1)",
        "> ",
        "",
        "> ",
        "beerfit1 <- meanf(beer2, h=11)",
        "> ",
        "beerfit2 <- rwf(beer2, h=11)",
        "> ",
        "beerfit3 <- snaive(beer2, h=11)",
        "> ",
        "beerfit4 <- auto.arima(beer2)",
        "> ",
        "tsdisplay(diff(WWWusage), main=\"\")",
        "> ",
        "fit <- Arima(WWWusage, order=c(3,1,1))",
        "> ",
        "summary(fit)",
        "Series: WWWusage \nARIMA(3,1,1)                    \n\nCoefficients:\n         ar1      ar2     ar3     ma1\n      1.0922  -0.5992  0.3231  0.0671\ns.e.  0.2694   0.2999  0.1242  0.2835\n\nsigma^2 estimated as 9.752:  log likelihood=-251.97\nAIC=513.94   AICc=514.58   BIC=526.91\n\nTraining set error measures:\n                    ME     RMSE     MAE      MPE     MAPE      MASE        ACF1\nTraining set 0.2331752 3.043705 2.36861 0.273302 1.892141 0.5234205 -0.01135814\n",
        "> ",
        "plot(forecast(fit))",
        "> ",
        "plot(stl(a10, s.window=12))",
        "> ",
        "plot(diff(log(a10), s.window=12))",
        "> ",
        "plot(a10)",
        "> ",
        "plot(log(a10))  # variance (as well as the scale) reduces for the log values",
        "> ",
        "tsdisplay(diff(WWWusage), main=\"\")",
        "> ",
        "fit <- Arima(WWWusage, order=c(3,1,1))",
        "> ",
        "summary(fit)",
        "Series: WWWusage \nARIMA(3,1,1)                    \n\nCoefficients:\n         ar1      ar2     ar3     ma1\n      1.0922  -0.5992  0.3231  0.0671\ns.e.  0.2694   0.2999  0.1242  0.2835\n\nsigma^2 estimated as 9.752:  log likelihood=-251.97\nAIC=513.94   AICc=514.58   BIC=526.91\n\nTraining set error measures:\n                    ME     RMSE     MAE      MPE     MAPE      MASE        ACF1\nTraining set 0.2331752 3.043705 2.36861 0.273302 1.892141 0.5234205 -0.01135814\n",
        "> ",
        "plot(forecast(fit))",
        "> ",
        "fit1 <- auto.arima(WWWusage)",
        "> ",
        "plot(forecast(fit1))",
        "> ",
        "summary(fit1)",
        "Series: WWWusage \nARIMA(1,1,1)                    \n\nCoefficients:\n         ar1     ma1\n      0.6504  0.5256\ns.e.  0.0842  0.0896\n\nsigma^2 estimated as 9.995:  log likelihood=-254.15\nAIC=514.3   AICc=514.55   BIC=522.08\n\nTraining set error measures:\n                    ME     RMSE      MAE       MPE     MAPE      MASE        ACF1\nTraining set 0.3035616 3.113754 2.405275 0.2805566 1.917463 0.5315228 -0.01715517\n",
        "> ",
        "# for a10 dataset",
        "> ",
        "fit2 <- auto.arima(a10)",
        "> ",
        "plot(forecast(fit2))",
        "> ",
        "summary(fit2)",
        "Series: a10 \nARIMA(1,1,1)(0,1,1)[12]                    \n\nCoefficients:\n          ar1      ma1     sma1\n      -0.2504  -0.6674  -0.4725\ns.e.   0.1007   0.0870   0.0641\n\nsigma^2 estimated as 0.8756:  log likelihood=-258.82\nAIC=525.63   AICc=525.85   BIC=538.64\n\nTraining set error measures:\n                     ME      RMSE       MAE        MPE     MAPE      MASE         ACF1\nTraining set 0.05924459 0.8982771 0.5761196 0.02969764 4.901351 0.4447873 -0.004871281\n",
        "> ",
        "# Evaluate forecast models using Australian beer dataset ------------------",
        "> ",
        "# Evaluating the models",
        "> ",
        "beer2 <- window(ausbeer, start=1992, end=2006-.1)",
        "> ",
        "beerfit1 <- meanf(beer2, h=11)",
        "> ",
        "beerfit2 <- rwf(beer2, h=11)",
        "> ",
        "beerfit3 <- snaive(beer2, h=11)",
        "> ",
        "beerfit4 <- auto.arima(beer2)",
        "> ",
        "plot(beerfit1, plot.conf=FALSE,",
        "+ ",
        "     main=\"forecasts for quaterly beer production\")",
        "> ",
        "lines(beerfit2$mean, col=\"red\")",
        "> ",
        "lines(beerfit3$mean, col=\"green\")",
        "> ",
        "plot(forecast(beerfit4), col=\"grey\")",
        "> ",
        "lines(ausbeer)",
        "> ",
        "# Monthly anti-diabetic drug sales in Australia from 1992 to 2008 ---------",
        "> ",
        "?a10",
        "> ",
        "beer2 <- window(ausbeer, start=1992, end=2006-.1)",
        "> ",
        "",
        "> ",
        "beerfit1 <- meanf(beer2, h=11)",
        "> ",
        "beerfit2 <- rwf(beer2, h=11)",
        "> ",
        "beerfit3 <- snaive(beer2, h=11)",
        "> ",
        "beerfit4 <- auto.arima(beer2)",
        "> ",
        "",
        "> ",
        "plot(beerfit1, plot.conf=FALSE,",
        "+ ",
        "main=\"forecasts for quaterly beer production\")",
        "> ",
        "lines(beerfit2$mean, col=\"red\")",
        "> ",
        "lines(beerfit3$mean, col=\"green\")",
        "> ",
        "plot(forecast(beerfit4), col=\"grey\")",
        "> ",
        "lines(ausbeer)",
        "> ",
        "# Evaluate forecast models using Australian beer dataset ------------------",
        "> ",
        "# Evaluating the models",
        "> ",
        "beer2 <- window(ausbeer, start=1992, end=2006-.1)",
        "> ",
        "",
        "> ",
        "beerfit1 <- meanf(beer2, h=11)",
        "> ",
        "beerfit2 <- rwf(beer2, h=11)",
        "> ",
        "beerfit3 <- snaive(beer2, h=11)",
        "> ",
        "beerfit4 <- auto.arima(beer2)",
        "> ",
        "",
        "> ",
        "plot(beerfit1, plot.conf=FALSE,",
        "+ ",
        "     main=\"forecasts for quaterly beer production\")",
        "> ",
        "lines(beerfit2$mean, col=\"red\")",
        "> ",
        "lines(beerfit3$mean, col=\"green\")",
        "> ",
        "plot(forecast(beerfit4), col=\"grey\")",
        "> ",
        "lines(ausbeer)",
        "> ",
        "aust <- window(austourists, start=2005)",
        "> ",
        "plot(aust)",
        "> ",
        "fit1 <- hw(aust, seasonal=\"additive\")",
        "> ",
        "fit2 <- hw(aust, seasonal=\"multiplicative\")",
        "> ",
        "plot(fit2, ylab=\"International visitnor night in Australia (millions)\",",
        "+ ",
        "     plot.conf=FALSE, type=\"o\", fcol=\"white\", xlab=\"Year\")",
        "> ",
        "lines(fitted(fit1), col=\"red\", lty=2)",
        "> ",
        "lines(fitted(fit2), col=\"green\", lty=2)",
        "> ",
        "#",
        "> ",
        "lines(fit1$mean, type=\"o\", col=\"red\")",
        "> ",
        "lines(fit2$mean, type=\"o\", col=\"green\")",
        "> ",
        "plot(a10)",
        "> ",
        "plot(log(a10))  # variance (as well as the scale) reduces for the log values",
        "> ",
        "# for exponential models, differencing ones gives you a striaght line, differencing twice, straight",
        "> ",
        "plot(stl(a10, s.window=12))",
        "> ",
        "plot(diff(log(a10), s.window=12))",
        "> ",
        "# ARIMA Model",
        "> ",
        "tsdisplay(diff(WWWusage), main=\"\")",
        "> ",
        "fit <- Arima(WWWusage, order=c(3,1,1))",
        "> ",
        "summary(fit)",
        "Series: WWWusage \nARIMA(3,1,1)                    \n\nCoefficients:\n         ar1      ar2     ar3     ma1\n      1.0922  -0.5992  0.3231  0.0671\ns.e.  0.2694   0.2999  0.1242  0.2835\n\nsigma^2 estimated as 9.752:  log likelihood=-251.97\nAIC=513.94   AICc=514.58   BIC=526.91\n\nTraining set error measures:\n                    ME     RMSE     MAE      MPE     MAPE      MASE        ACF1\nTraining set 0.2331752 3.043705 2.36861 0.273302 1.892141 0.5234205 -0.01135814\n",
        "> ",
        "plot(forecast(fit))",
        "> ",
        "#",
        "> ",
        "fit1 <- auto.arima(WWWusage)",
        "> ",
        "plot(forecast(fit1))",
        "> ",
        "summary(fit1)",
        "Series: WWWusage \nARIMA(1,1,1)                    \n\nCoefficients:\n         ar1     ma1\n      0.6504  0.5256\ns.e.  0.0842  0.0896\n\nsigma^2 estimated as 9.995:  log likelihood=-254.15\nAIC=514.3   AICc=514.55   BIC=522.08\n\nTraining set error measures:\n                    ME     RMSE      MAE       MPE     MAPE      MASE        ACF1\nTraining set 0.3035616 3.113754 2.405275 0.2805566 1.917463 0.5315228 -0.01715517\n",
        "> ",
        "# for a10 dataset",
        "> ",
        "fit2 <- auto.arima(a10)",
        "> ",
        "plot(forecast(fit2))",
        "> ",
        "summary(fit2)",
        "Series: a10 \nARIMA(1,1,1)(0,1,1)[12]                    \n\nCoefficients:\n          ar1      ma1     sma1\n      -0.2504  -0.6674  -0.4725\ns.e.   0.1007   0.0870   0.0641\n\nsigma^2 estimated as 0.8756:  log likelihood=-258.82\nAIC=525.63   AICc=525.85   BIC=538.64\n\nTraining set error measures:\n                     ME      RMSE       MAE        MPE     MAPE      MASE         ACF1\nTraining set 0.05924459 0.8982771 0.5761196 0.02969764 4.901351 0.4447873 -0.004871281\n",
        "> ",
        "source('~/Desktop/SYD_DAT_6/labs/Week 8/Time_Series_Lab.R')",
        "Error in install.packages : Updating loaded packages\nError in install.packages : Updating loaded packages\nError in install.packages : Updating loaded packages\nSeries: WWWusage \nARIMA(3,1,1)                    \n\nCoefficients:\n         ar1      ar2     ar3     ma1\n      1.0922  -0.5992  0.3231  0.0671\ns.e.  0.2694   0.2999  0.1242  0.2835\n\nsigma^2 estimated as 9.752:  log likelihood=-251.97\nAIC=513.94   AICc=514.58   BIC=526.91\n\nTraining set error measures:\n                    ME     RMSE     MAE      MPE     MAPE",
        "      MASE        ACF1\nTraining set 0.2331752 3.043705 2.36861 0.273302 1.892141 0.5234205 -0.01135814\nSeries: WWWusage \nARIMA(1,1,1)                    \n\nCoefficients:\n         ar1     ma1\n      0.6504  0.5256\ns.e.  0.0842  0.0896\n\nsigma^2 estimated as 9.995:  log likelihood=-254.15\nAIC=514.3   AICc=514.55   BIC=522.08\n\nTraining set error measures:\n                    ME     RMSE      MAE       MPE     MAPE      MASE        ACF1\nTraining set 0.3035616 3.113754 2.405275 0.2805566 1.917463 0.5315228 -0.01715517",
        "\nSeries: a10 \nARIMA(1,1,1)(0,1,1)[12]                    \n\nCoefficients:\n          ar1      ma1     sma1\n      -0.2504  -0.6674  -0.4725\ns.e.   0.1007   0.0870   0.0641\n\nsigma^2 estimated as 0.8756:  log likelihood=-258.82\nAIC=525.63   AICc=525.85   BIC=538.64\n\nTraining set error measures:\n                     ME      RMSE       MAE        MPE     MAPE      MASE         ACF1\nTraining set 0.05924459 0.8982771 0.5761196 0.02969764 4.901351 0.4447873 -0.004871281\n",
        "> ",
        "install.packages(\"forecast\")",
        "  % Total    %",
        " Received % Xferd  Average Speed   ",
        "Time   ",
        " Time     Time  Curre",
        "nt\n              ",
        "       ",
        "     ",
        "       D",
        "load  ",
        "Upload   Total  ",
        " Spent    Left  Speed\n",
        "\r  0    ",
        " 0    ",
        "0     ",
        "0    0 ",
        "    ",
        "0      0      ",
        "0 --:--:-",
        "- --",
        ":--:-- ",
        "--:--:--",
        "   ",
        "  0",
        "\r100 1517k  100 1517k    0     0  5449",
        "k      0 --:--:-- --:--:-- --:--:-- 5457k\n",
        "\nThe downloaded binary packages are in\n\t/var/folders/pd/g4kts07s0_75q93xwbrr709r0000gn/T//RtmpzmfwGc/downloaded_packages\n",
        "> ",
        "install.packages(\"ggplot2\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"fpp\")",
        "Error in install.packages : Updating loaded packages\n\nRestarting R session...\n\n"
    ],
    "type" : [
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        2,
        0,
        1,
        2
    ]
}